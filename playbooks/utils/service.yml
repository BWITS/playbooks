---
# ===================================================================================================
# Downloads and unpacks an archive, installs, and starts a service {{ service }}, titled {{ title }}
# ===================================================================================================
# - Runs download.yml
# - Creates an upstart script to run {{ command }} as service {{ service }} and starts it
#   service started logs to /var/log/{{ service }}.log
# - Runs verify.yml
# ===================================================================================================
# - Required variables are: title, service, command. Others are optional.
# ===================================================================================================

- debug: msg="title = '{{ title }}'"
- debug: msg="service = '{{ service }}'"
- debug: msg="command = '{{ command }}'"
- debug: var=port
- debug: var=ports
- debug: var=start_service

- include: "{{ common.utils.download }}"

- set_fact:
    upstart_script:   "{{ ubuntu.init_dir }}/{{ service }}.conf"
    service_log:      "{{ ubuntu.log_dir  }}/{{ service }}.log"
    is_start_service: "{{ start_service | default( True ) }}"

- debug: msg="Starting {{ title }} service '{{ service }}' with [{{ command }}] in '{{ upstart_script }}'"
  when:  is_start_service|bool

- debug: msg="Setting up {{ title }} service '{{ service }}' with [{{ command }}] in '{{ upstart_script }}'"
  when:  not ( is_start_service|bool )

- name: Generating {{ title }} upstart script
  template:
    src:  "{{ playbook_dir }}/utils/templates/upstart"
    dest: "{{ upstart_script }}"

- name:    Restarting {{ title }} service
  service: name={{ service }} state=restarted enabled=yes
  when:    is_start_service|bool

- pause:   seconds=3
  when:    is_start_service|bool

- include: "{{ common.utils.verify }}"
  when:    is_start_service|bool and (( port is defined ) or ( ports is defined ))
