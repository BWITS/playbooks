---
- name: Calculating Artifactory version
  set_fact:
    artifactory_version: "{{ artifactory.version | calculate( artifactory.latest ) }}"
- set_fact:
    artifactory_port:    "{{ artifactory_port    | default( artifactory.port ) }}"
    artifactory_home:    "{{ artifactory.home }}/artifactory-{{ artifactory_version }}"
- set_fact:
    artifactory_config:  "{{ artifactory_home }}/tomcat/conf/server.xml"
    artifactory_sh:      "{{ artifactory_home }}/bin/artifactory.sh"

- name: Stopping Artifactory service
  service: name=artifactory state=stopped
  ignore_errors: yes

- include: "{{ common.download_unpack }}"
  vars:
    name:    Artifactory
    url:     "{{ artifactory.url     | tokens({ 'version': artifactory_version }) }}"
    archive: "{{ artifactory.archive | tokens({ 'version': artifactory_version }) }}"
    home:    "{{ artifactory.home }}"

- name: Configuring Artifactory port
  lineinfile:
    dest:   "{{ artifactory_config }}"
    line:   '        <Connector port="{{ artifactory_port }}"/>'
    regexp: '<Connector port="\d+?"/>'

- name: Generating Artifactory upstart script
  template:
    src:  artifactory-upstart
    dest: "{{ ubuntu.init_dir }}/artifactory.conf"

- name: Starting Artifactory service
  service: name=artifactory state=started enabled=yes

- name: Verifying Artifactory endpoint
  wait_for: port={{ artifactory_port }} timeout=30

- name:     Waiting for Artifactory to start
  command:  curl http://{{ common.net.localhost }}:{{ artifactory_port }}/artifactory/api/system/ping
  register: ping_result
  until:    ping_result.stdout == 'OK'
  retries:  20
  delay:    3

- name: Verifying Artifactory HTTP endpoints
  uri:  url="http://{{ common.net.localhost }}:{{ artifactory_port }}{{ item.path }}"
  with_items:
    - { path: '' }
    - { path: '/artifactory/api/application.wadl' }
    - { path: '/artifactory/api/system/ping' }
    - { path: '/artifactory/webapp/home.html' }
    - { path: '/artifactory/webapp/browserepo.html' }
