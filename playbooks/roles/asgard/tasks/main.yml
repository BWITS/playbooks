---
- debug: var=build
  when:  build is defined

- name: Verifying AWS credentials
  assert:
    that:
      - AWS_ACCOUNT_ID        is defined
      - AWS_ACCESS_KEY_ID     is defined
      - AWS_SECRET_ACCESS_KEY is defined

- group:
    name:  "{{ asgard.group }}"

- user:
    name:  "{{ asgard.user }}"
    group: "{{ asgard.group }}"
    home:  "{{ asgard.user_home }}"

- name: Creating Asgard home dir
  file:
    path:  "{{ asgard.home }}"
    state: directory
    owner: "{{ asgard.user }}"
    group: "{{ asgard.group }}"
    mode:  "{{ common.mode.directory }}"

- name: Creating Asgard log dir
  file:
    path:  "{{ asgard.log | dirname }}"
    state: directory
    owner: "{{ asgard.user }}"
    group: "{{ asgard.group }}"
    mode:  "{{ common.mode.directory }}"

- name: Creating Asgard config
  template:
    src:   Config.groovy
    dest:  "{{ asgard.home }}"
    owner: "{{ asgard.user }}"
    group: "{{ asgard.group }}"

# http://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/credentials.html
# http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html
- name: Creating AWS credentials directory
  file:
    path:  "{{ asgard.user_home }}/.aws"
    state: directory
    owner: "{{ asgard.user }}"
    group: "{{ asgard.group }}"
    mode:  "{{ common.mode.directory }}"

- name: Creating AWS credentials file
  template:
    src:   credentials
    dest:  "{{ asgard.user_home }}/.aws"
    owner: "{{ asgard.user }}"
    group: "{{ asgard.group }}"
    mode:  "{{ common.mode.secret }}"

- name: Downloading Asgard JAR file from AWS S3
  get_url:
    url:   "{{ build.artifacts['asgard-standalone.jar'].s3 }}"
    dest:  "{{ asgard.jar }}"
    force: yes
  when: build is defined

- name: Downloading Asgard JAR file from '{{ asgard.jar_url }}'
  get_url:
    url:  "{{ asgard.jar_url }}"
    dest: "{{ asgard.jar }}"
  when: ( not ( build is defined ))

- name: Checking Asgard java
  command: "{{ asgard.java }} -version"

- name: Generating Asgard upstart script
  template:
    src:  upstart
    dest: "{{ ubuntu.init_dir }}/asgard.conf"

- name:    Restarting Asgard service
  service: name=asgard state=restarted
