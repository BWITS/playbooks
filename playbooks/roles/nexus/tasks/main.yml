---
- set_fact:
    nexus_port: "{{ nexus_port | default( nexus.port ) }}"

  # -----------------------
  # Standalone
  # -----------------------

- set_fact:
    nexus_home: "{{ nexus.standalone.home }}/nexus-{{ nexus.version }}"
  when: nexus.run == 'standalone'

- include: "{{ common.utils.service }}"
  vars:
    service:  nexus
    title:    Nexus
    url:      "{{ nexus.standalone.url     | tokens( nexus ) }}"
    archive:  "{{ nexus.standalone.archive | tokens( nexus ) }}"
    home:     "{{ nexus.standalone.home }}"
    configs:
      - { from: nexus.sh,         to: "{{ ubuntu.envs_dir }}/nexus.sh" }
      - { from: nexus.properties, to: "{{ nexus_home }}/conf/nexus.properties" }
    env_config: "{{ ubuntu.envs_dir }}/nexus.sh"
    command:    "{{ nexus_home }}/bin/nexus console"
    port:       "{{ nexus_port }}"
    timeout:    60
    verify:
      - { path: "/nexus", content: "nexusVersion={{ nexus.version }}" }
  when: nexus.run == 'standalone'

  # -----------------------
  # War
  # -----------------------

- include: "{{ playbook_dir }}/roles/tomcat/tasks/main.yml"
  vars:
    tomcat_port: "{{ nexus_port }}"
  when: nexus.run == 'war'

- include: "{{ common.utils.service }}"
  vars:
    service:  nexus
    title:    Nexus
    url:      "{{ nexus.war.url     | tokens( nexus ) }}"
    archive:  "{{ nexus.war.archive | tokens( nexus ) }}"
    home:     "{{ tomcat_root_app }}"
    command:  "{{ tomcat_run  }}"
    port:     "{{ nexus_port }}"
    timeout:  60
    wait_for:
      - { content: "nexusVersion={{ nexus.version }}" }
    verify:
      - { content: "Sonatype Nexus" }
  when: nexus.run == 'war'
