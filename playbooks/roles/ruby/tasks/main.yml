---
- name: Calculate Ruby version
  set_fact:
    ruby_version: "{{ ruby.version | calculate( ruby ) }}"

- set_fact:
    rvm_sh:   /opt/rvm.sh
    ruby_bin: "{{ ruby.rvm.home }}/rubies/ruby-{{ ruby_version }}/bin"
    rvm:      "{{ ruby.rvm.home }}/bin/rvm"

- debug: var=ruby_version
- debug: var=ruby_bin

- name: Download RVM installation script
  get_url:
    url:   "{{ ruby.rvm.url }}"
    dest:  "{{ rvm_sh }}"
    force: yes

- name: Chmod RVM installation script
  file:
    name:  "{{ rvm_sh }}"
    state: file
    mode:  "{{ common.mode.script }}"

- name:    Install RVM
  shell:   "{{ rvm_sh }}"
- command: "{{ rvm }} --version"

- name:     "Install Ruby"
  command:  "{{ rvm }} install '{{ ruby_version }}'"
- name:     Update PATH
  template:
    src:  ruby.sh
    dest: "{{ ubuntu.envs_dir }}"

- command:  "{{ ruby_bin }}/gem  --version"
- command:  "{{ ruby_bin }}/rake --version"
- command:  "{{ ruby_bin }}/ruby --version"
  register: ruby_version_out
- debug:    var=ruby_version_out.stdout

- name: Verify Ruby version
  assert:
    that:
      - ruby_version in ruby_version_out.stdout
      - "'ruby'      in ruby_version_out.stdout"

- name: Install Ruby gems
  gem:
    executable:   "{{ ruby_bin }}/gem"
    name:         "{{ item }}"
    user_install: no
  with_items: ruby.gems.keys()

- name:       Verify Ruby gems
  command:    "{{ item }}"
  with_items: ruby.gems.values()
