---
- apt:  name={{ item }} state=latest force=yes
  with_items:
    - build-essential

- set_fact:
    rvm_sh: /opt/rvm.sh
    rvm:    "{{ ruby.rvm.home }}/bin/rvm"

- get_url:
    url:   "{{ ruby.rvm.url }}"
    dest:  "{{ rvm_sh }}"
    force: "{{ ruby.rvm.redownload }}"

- file:
    name:  "{{ rvm_sh }}"
    state: file
    mode:  0744

- shell:   "{{ rvm_sh }}"
- command: "{{ rvm }} --version"

- set_fact: ruby_version="{{ ruby.version | calculate( ruby.latest ) }}"
- set_fact: ruby_bin="{{ ruby.rvm.home }}/rubies/ruby-{{ ruby_version }}/bin"
- debug:    var=ruby_version
- debug:    var=ruby_bin

- command:  "{{ rvm }} install {{ ruby_version }}"
- command:  "{{ ruby_bin }}/ruby --version"
  register: ruby_version_out
- debug:    var=ruby_version_out.stdout
- assert:
    that:
      - "'ruby'               in ruby_version_out.stdout"
      - "'{{ ruby_version }}' in ruby_version_out.stdout"

- template:
    src:  ruby.sh
    dest: "{{ ubuntu.envs_dir }}"

- set_fact:
    gems: "{{ ' '.join( ruby.gems.keys()) }}"
- debug: var=gems

- template:
    src:  install-gems.sh
    dest: /opt
    mode: "{{ common.mode.script }}"

- file:
    path:  "{{ item }}"
    state: file
  with_items:
    - "{{ ubuntu.envs_dir }}/rvm.sh"
    - "{{ ubuntu.envs_dir }}/ruby.sh"

- command: "{{ ruby_bin }}/gem --version"
- shell:   /opt/install-gems.sh

- command:    "{{ item }}"
  with_items: ruby.gems.values()
