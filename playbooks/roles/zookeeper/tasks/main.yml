---
- set_fact:
    zookeeper_home:   "{{ zookeeper.home }}/zookeeper-{{ zookeeper.version }}"
- set_fact:
    zookeeper_port:   "{{ zookeeper_port | default( zookeeper.port ) }}"
    zookeeper_config: "{{ zookeeper_home }}/conf/zoo.cfg"

- file: path="{{ zookeeper.data_dir }}" state=directory

- include: "{{ common.utils.service }}"
  vars:
    title:    ZooKeeper
    service:  zookeeper
    url:     "{{ zookeeper.url     | tokens( zookeeper ) }}"
    archive: "{{ zookeeper.archive | tokens( zookeeper ) }}"
    home:    "{{ zookeeper.home }}"
    configs:
      - { from: zoo.cfg, to: "{{ zookeeper_config }}" }
    env:
      PATH:  "$PATH:{{ zookeeper_home }}/bin"
    command: "{{ zookeeper_home }}/bin/zkServer.sh start-foreground"
    start_service: "{{ zk_instances is undefined }}"
    port:    "{{ zookeeper_port }}"

- include: cluster.yml
  when:    zk_instances is defined

- name: Installing Python pip
  apt:  name=python-pip state=latest force=yes

- name: Installing zk-shell
  pip:  name=zk-shell state=latest

- include: "{{ common.utils.run }}"
  vars:
    title: ZK CLI check
    commands:
      - { run:    "echo 'ls /' | '{{ zookeeper_home }}/bin/zkCli.sh' -server '{{ common.net.localhost }}:{{ zookeeper_port }}'",
          expect: '{{ common.net.localhost }}:{{ zookeeper_port }}(CONNECTED)' }
      - { run:    "echo 'ls /' | zk-shell '{{ common.net.localhost }}:{{ zookeeper_port }}' --run-from-stdin",
          expect: zookeeper  }
      - { run:    "echo 'ls /' | zk-shell '{{ common.net.local_ip }}:{{ zookeeper_port }}' --run-from-stdin",
          expect: zookeeper  }
  when: zk_instances is undefined
