---
# -----------------------------
# Loads artifacts into {{ repo }} by building sample applications
# -----------------------------

- include_vars: "{{ common.vars.exhibitor }}"
- name: Cleaning up Gradle cache and previously built artifacts
  file: path={{ item }} state=absent
  with_items:
    - ~/.gradle
    - "{{ exhibitor.home }}/build"
    - "{{ test_repo.sample_app.home }}/build"

# -----------------------------
# Exhibitor
# -----------------------------

- name: Building Exhibitor
  include: "{{ common.roles.exhibitor }}"
  vars:
    maven_repo:        "{{ repo }}"
    exhibitor_version: "{{ test_repo.exhibitor.version }}"
    exhibitor_service: false

# -----------------------------
# Sample app
# -----------------------------

- stat:     path={{ test_repo.sample_app.home }}/build/libs/continuous-delivery-jump-start.war
  register: sample_app_war
- set_fact: sample_app_war_missing="{{ not sample_app_war.stat.exists | bool }}"
- debug:    var=sample_app_war_missing

- name: Cloning sample application
  git:
    repo:    "{{ test_repo.sample_app.repo }}"
    dest:    "{{ test_repo.sample_app.home }}"
    version: "{{ test_repo.sample_app.sha  }}"
  when: sample_app_war_missing

- replace:
    dest:    "{{ test_repo.sample_app.home }}/build.gradle"
    regexp:  '(jcenter\(\))|(mavenCentral\(\))'
    replace: "    maven { url '{{ repo }}' }"
  when: sample_app_war_missing

- name: Building sample application
  command: gradle clean build
  environment: "{{ gradle_env | expand_path( ansible_env ) }}"
  args:
    chdir: "{{ test_repo.sample_app.home }}"
  when: sample_app_war_missing
