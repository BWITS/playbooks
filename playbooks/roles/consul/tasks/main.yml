---
- debug: msg="consul_role = '{{ consul_role }}'"

- name: Calculating Consul version
  set_fact:
    consul_version:   "{{ consul.version | calculate( consul.latest ) }}"
    is_consul_server: "{{ consul_role == 'server' }}"
    is_consul_client: "{{ consul_role == 'client' }}"

- set_fact: consul_command="consul agent -server -bind={{ common.net.any_ip }} -client={{ common.net.any_ip }} -bootstrap-expect 1 -data-dir '{{ consul.data_dir }}'"
  when:     is_consul_server|bool

- set_fact: consul_command="consul agent -bind={{ common.net.any_ip }} -data-dir '{{ consul.data_dir }}'"
  when:     is_consul_client|bool

- debug: var=is_consul_server
- debug: var=is_consul_client
- debug: msg="consul_server = {{ consul_server }}"
- debug: msg="consul_command = {{ consul_command }}"

# https://www.consul.io/intro/getting-started/agent.html
# https://www.consul.io/intro/getting-started/join.html

- include: "{{ common.utils.service }}"
  vars:
    title:   Consul
    service: consul
    url:     "{{ consul.url     | tokens({ 'version': consul_version }) }}"
    archive: "{{ consul.archive | tokens({ 'version': consul_version }) }}"
    home:    "{{ consul.home }}"
    env:     "{{ consul_env }}"
    tests:
      - { run: consul --version, expect: 'Consul v{{ consul_version }}' }
      - { run: consul version,   expect: 'Consul v{{ consul_version }}' }
      - { run: consul,           expect: [ Available commands are, agent, keygen ]}
      - { run: consul --help,    expect: [ Available commands are, agent, keygen ]}
    command: "{{ consul_command }}"
    verify:  "{{ consul.verify }}"
    port:    "{{ consul.ports.http }}"
    tests_after:
      - { run:    consul members,
          expect: [ Node, Address, Status, Type, Build, Protocol, 'alive\s+(server|client)\s+{{ consul_version }}' ] }
      - { run:    consul info,
          expect: [ 'agent:', 'build:', 'consul:', 'runtime:', 'serf_lan:' ] }

- include: "{{ common.utils.run }}"
  vars:
    title: Consul server
    commands:
      - { run:    'dig @{{ common.net.localhost }} -p {{ consul.ports.dns }}',
          expect: ';; SERVER: {{ common.net.local_ip }}#{{ consul.ports.dns }}({{ common.net.local_ip }})' }
  when: is_consul_server|bool

- include: "{{ common.utils.run }}"
  vars:
    title: Consul client
    env:   "{{ consul_env }}"
    commands:
      - { run:    'dig @{{ consul_server }} -p {{ consul.ports.dns }}',
          expect: ';; SERVER: {{ consul_server }}#{{ consul.ports.dns }}({{ consul_server }})' }
      - { run:    "consul join '{{ consul_server }}'",
          expect: Successfully joined cluster by contacting 1 nodes. }
      - { run:    "consul members",
          expect: [ '^{{ ansible_hostname }}\s+.+:{{ consul.ports.gossip }}\s+alive\s+client\s+{{ consul_version }}\s+\d+$',
                    '{{ consul_server }}:{{ consul.ports.gossip }}\s+alive\s+server\s+{{ consul_version }}' ] }
  when: is_consul_client|bool
