---
- name: Calculating Consul version
  set_fact:
    consul_version: "{{ consul.version | calculate( consul.latest ) }}"
    consul_server:  "{{ consul_role == 'server' }}"
    consul_client:  "{{ consul_role == 'client' }}"

- set_fact:
    consul_command: "consul agent -server -bind=0.0.0.0 -bootstrap-expect 1 -data-dir '{{ consul.data_dir }}'"
    consul_verify:  "{{ consul.verify.server }}"
  when: consul_server|bool

- set_fact:
    consul_command: "consul agent -bind=0.0.0.0 -data-dir '{{ consul.data_dir }}'"
    consul_verify:  "{{ consul.verify.client }}"
  when: consul_client|bool

# https://www.consul.io/intro/getting-started/agent.html
# https://www.consul.io/intro/getting-started/join.html

- include: "{{ common.utils.service }}"
  vars:
    title:   Consul
    service: consul
    url:     "{{ consul.url     | tokens({ 'version': consul_version }) }}"
    archive: "{{ consul.archive | tokens({ 'version': consul_version }) }}"
    home:    "{{ consul.home }}"
    env:     "{{ consul_env }}"
    tests:
      - { run: consul --version, expect: 'Consul v{{ consul_version }}' }
      - { run: consul version,   expect: 'Consul v{{ consul_version }}' }
      - { run: consul,           expect: [ Available commands are, agent, keygen ]}
      - { run: consul --help,    expect: [ Available commands are, agent, keygen ]}
    command: "{{ consul_command }}"
    verify:  "{{ consul_verify }}"
    port:    "{{ consul.ports.http }}"
    tests_after:
      - { run:    consul members,
          expect: [ Node, Address, Status, Type, Build, Protocol, alive, server|client, "{{ consul_version }}" ] }
      - { run:    consul info,
          expect: [ 'agent:', 'build:', 'consul:', 'runtime:', 'serf_lan:' ] }

- include: "{{ common.utils.run }}"
  vars:
    title: Consul server
    commands:
      - { run:    'dig @{{ common.net.localhost }} -p {{ consul.ports.dns }}',
          expect: ';; SERVER: {{ common.net.local_ip }}#{{ consul.ports.dns }}({{ common.net.local_ip }})' }
  when: consul_server|bool

- include: "{{ common.utils.run }}"
  vars:
    title: Consul client
    env:   "{{ consul_env }}"
    commands:
      # - { run: "consul join '{{ consul_server }}'", expect: Successfully joined cluster }
      # - { run: "consul members", expect: Successfully joined cluster }
  when: consul_client|bool
