---

# http://dev.mysql.com/downloads/repo/apt/
# http://dev.mysql.com/downloads/file.php?id=452447
# http://dev.mysql.com/get/mysql-apt-config_0.2.1-1ubuntu14.04_all.deb

- name: Adding MySQL repositories
  apt_repository: repo="{{ item }}" update_cache=yes
  with_items:
    - deb http://repo.mysql.com/apt/ubuntu/ trusty mysql-5.6
    - deb-src http://repo.mysql.com/apt/ubuntu/ trusty mysql-5.6

- name: Installing MySQL
  apt:  name={{ item }} state=latest force=yes
  with_items:
    - python-mysqldb
    - mysql-server

- name: Starting MySQL service
  service: name=mysql state=started

- include: "{{ common.utils.run }}"
  vars:
    title: MySQL check
    command: { run: mysql --version, expect: [ mysql, 5.6 ] }

# http://stackoverflow.com/a/21151255/472153
- name: Updating '{{ mysql.my_cnf }}' - external access
  lineinfile:
    dest:   "{{ mysql.my_cnf }}"
    line:   'bind-address = {{ common.net.any_ip }}'
    regexp: ^bind-address\s+=
  when: mysql.bind_external|bool

- name: Updating '{{ mysql.my_cnf }}' - internal access
  lineinfile:
    dest:   "{{ mysql.my_cnf }}"
    line:   'bind-address = {{ common.net.localhost }}'
    regexp: ^bind-address\s+=
  when: not ( mysql.bind_external|bool )

- template:
    src:  root_access.sql
    dest: "{{ mysql.access_script }}"

- name:  Running root access script
  shell: "mysql -u '{{ mysql.root.user }}' < {{ mysql.access_script }}"
  ignore_errors: yes

- name: Restarting MySQL service
  service: name=mysql state=restarted

- name: Verifying MySQL access
  shell: "mysql -u'{{ mysql.root.user }}' -p'{{ mysql.root.password }}' -e '{{ item }}'"
  with_items:
    - show databases
    - select count(*) from mysql.user
