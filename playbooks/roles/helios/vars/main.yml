---
helios: {
  version:    latest, # 0.8.213, latest - https://github.com/spotify/helios/releases
  url:        '{{ common.urls.github }}/spotify/helios/releases/download/<version>/helios-debs.tar.gz',
  archive:    /opt/helios-<version>.tar.gz,
  home:       /opt/helios,
  srv_prefix: _helios._http,
  docker: {
    nginx: {
      image: 'nginx:1.7.9',
      port:  8080,
      job:   'nginx:v1'
    }
  },
  latest: {
    command: "curl -Ls '{{ common.urls.github }}/spotify/helios/releases' | grep '/spotify/helios/releases/tag/' | sed -r 's/<[^>]+>//g' | sed -r 's/:.+//' | sed '/^\\s*$/d' | head -1 | awk '{print $1}'",
    pattern: '^\d+\.\d+\.\d+$'
  },
  master: {
    port:   5801,
    healthcheck: {
      url:      'http://{{ common.net.localhost }}:5802/healthcheck',
      response: '{"deadlocks":{"healthy":true},"zookeeper":{"healthy":true}}'
    },
    config: "{{ ubuntu.etc_default }}/helios-master",
    script: /usr/bin/helios-master
  },
  agent: {
    config:           "{{ ubuntu.etc_default }}/helios-agent",
    config_endpoints: ~/.helios/config,
    state_dir:        /var/lib/helios-agent,
    healthcheck: {
      url:      'http://{{ common.net.localhost }}:5804/healthcheck',
      response: '{"deadlocks":{"healthy":true},"docker":{"healthy":true},"zookeeper":{"healthy":true}}'
    },
    registrar_plugin: {
      skydns: {
        version: 0.1, # https://github.com/spotify/helios-skydns/releases
        url:     '{{ common.urls.github }}/spotify/helios-skydns/releases/download/<version>/helios-skydns-<version>.jar',
        archive: /opt/helios-skydns-<version>.jar
      },
      consul: {
        version: 0.24, # https://github.com/SVT/helios-consul/releases
        url:     '{{ common.urls.github }}/SVT/helios-consul/releases/download/<version>/helios-consul-<version>.jar',
        archive: /opt/helios-consul-<version>.jar
      },
    },
    script: /usr/bin/helios-agent,
    docker: {
      tcp:  'tcp://localhost:{{ common.net.ports.docker }}',
      http: 'http://localhost:{{ common.net.ports.docker }}'
    }
  }
}
