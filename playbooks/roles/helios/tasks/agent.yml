---
- set_fact: agent_name="{{ ansible_hostname }}.{{ domain }}"

- set_fact:
    registrar_plugin_url:      "{{ helios.agent.registrar_plugin.skydns.url     | tokens( helios.agent.registrar_plugin.skydns ) }}"
    registrar_plugin_archive:  "{{ helios.agent.registrar_plugin.skydns.archive | tokens( helios.agent.registrar_plugin.skydns ) }}"
    registrar_plugin_endpoint: "http://{{ helios_master }}:{{ etcd.port }}"
  when: not ( use_consul|bool )

- set_fact:
    registrar_plugin_url:      "{{ helios.agent.registrar_plugin.consul.url     | tokens( helios.agent.registrar_plugin.consul ) }}"
    registrar_plugin_archive:  "{{ helios.agent.registrar_plugin.consul.archive | tokens( helios.agent.registrar_plugin.consul ) }}"
    registrar_plugin_endpoint: "http://{{ common.net.localhost }}:{{ consul.ports.http }}"
  when: use_consul|bool

- debug: var=registrar_plugin_url
- debug: var=registrar_plugin_archive
- debug: var=registrar_plugin_endpoint

- include: verify-master.yml master={{ helios_master }} register_host="{{ agent_name }}"
- include: verify-helios.yml

- debug: msg="De-registering Helios agent '{{ agent_name }}'"
- command: "{{ helios_command }} deregister --yes '{{ agent_name }}'"
  ignore_errors: yes

- name: Stopping Helios agent service
  service: name=helios-agent state=stopped
  ignore_errors: yes

- file: path={{ helios.agent.config_endpoints | dirname }} state=directory

- include: "{{ common.utils.download }}"
  vars:
    title:   Helios registrar plugin
    url:     "{{ registrar_plugin_url }}"
    archive: "{{ registrar_plugin_archive }}"
    configs:
      - { role: helios, from: agent-config,           to: "{{ helios.agent.config }}" }
      - { role: helios, from: agent-config-endpoints, to: "{{ helios.agent.config_endpoints }}" }

- name: Installing Helios agent
  apt:  deb="{{ helios.home }}/helios-agent_{{ helios_version }}_all.deb"

- name:  Updating Helios agent script
  shell: sed -i "s|exec java|exec '{{ java_home }}/bin/java'|" '{{ helios.agent.script }}'

- include: agent-docker.yml

- name:    Starting Helios agent service
  service: name=helios-agent state=started enabled=yes
- pause:   seconds=5

- name: Running Helios agent healthcheck
  uri:
    url:            "{{ helios.agent.healthcheck.url }}"
    return_content: yes
  register: healthcheck_out
- debug: var=healthcheck_out.content
- fail:  msg="Helios agent healthcheck failed [{{ healthcheck_out.content }}] != [{{ helios.agent.healthcheck.response }}]"
  when:  healthcheck_out.content != helios.agent.healthcheck.response

- include: verify-helios.yml master={{ helios_master }} agent={{ agent_name }}
