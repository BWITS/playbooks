---
# --------------------------------------------
#   Common tasks for Helios master and agent
# --------------------------------------------
- include: "{{ common.utils.fake }}"
  vars:      # Java 8 JRE is already installed
    package: java7-runtime

- include: "{{ common.utils.include }}"
  vars:
    roles: [ zookeeper, etcd ]
  when: helios_master is defined # When helios_role is "cli" - 'helios_master' is undefined

- name: Calculating Helios version
  set_fact:
    helios_version:     "{{ helios.version     | calculate( helios.latest ) }}"

- set_fact:
    helios_master_port: "{{ helios_master_port | default( helios.master.port ) }}"
    zookeeper_port:     "{{ zookeeper_port     | default( zookeeper.port ) }}"
    etcd_port:          "{{ etcd_port          | default( etcd.port ) }}"
  when: helios_master is defined

- set_fact:
    helios_command:     "helios -z 'http://{{ helios_master }}:{{ helios_master_port }}'"
  when: helios_master is defined

- debug: var=ansible_hostname
- debug: var=helios_master
- debug: var=domain
- debug: var=helios_command

- include: "{{ common.utils.download }}"
  vars:
    title:   Helios
    url:     "{{ helios.url     | tokens({ 'version': helios_version }) }}"
    archive: "{{ helios.archive | tokens({ 'version': helios_version }) }}"
    home:    "{{ helios.home }}"

- name: Installing Helios packages
  apt:  deb="{{ helios.home }}/helios-services_{{ helios_version }}_all.deb"
  when: helios_master is defined

- apt:  deb="{{ helios.home }}/helios_{{ helios_version }}_all.deb"

- include: "{{ common.utils.run }}"
  vars:
    title:   Helios checks
    commands:
      - { run: helios --version, expect: 'Spotify Helios CLI {{ helios_version }}'  }

- name: Installing Python pip
  apt:  name=python-pip state=latest force=yes
  when: helios_master is defined

- name: Installing zk-shell
  pip:  name=zk-shell state=latest
  when: helios_master is defined
