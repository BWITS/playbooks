---
- set_fact:
    master_name: "{{ ansible_hostname }}.{{ domain }}"

- name: Stopping Helios master service
  service: name=helios-master state=stopped
  ignore_errors: yes

- name: Copying Helios master config
  template:
    src:  master-config
    dest: "{{ helios.master.config }}"

- name: Installing Helios master
  apt:  deb="{{ helios.home }}/helios-master_{{ helios_version }}_all.deb"

- name:  Updating Helios master script
  shell: sed -i "s|exec java|exec '{{ java_home }}/bin/java'|" '{{ helios.master.script }}'

- name:    Starting Helios master service
  service: name=helios-master state=started enabled=yes
- pause:   seconds=5

- name: Running Helios master healthcheck
  uri:
    url:            "{{ helios.master.healthcheck.url }}"
    return_content: yes
  register: healthcheck_out
- debug: var=healthcheck_out.content
- fail:  msg="Helios master healthcheck failed [{{ healthcheck_out.content }}] != [{{ helios.master.healthcheck.response }}]"
  when:  healthcheck_out.content != helios.master.healthcheck.response

# Registering "_helios._http.domain" record (SkyDNS only)
# https://github.com/spotify/helios/blob/master/docs/automatic_master_lookup.md
- include: "{{ common.utils.register }}"
  vars:
    host: "{{ common.net.localhost }}"
    src:  "{{ helios.srv_prefix }}.{{ domain }}"
    dest: "{{ master_name }}"
    port: "{{ helios_master_port }}"
  when: not ( use_consul|bool )

- include: verify-master.yml master={{ common.net.localhost }} register_host={{ master_name }}
- include: verify-master.yml master={{ helios_master }}        register_host={{ master_name }}
- include: verify-helios.yml
