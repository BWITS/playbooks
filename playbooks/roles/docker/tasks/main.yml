---
# http://docs.docker.com/installation/ubuntulinux/

- set_fact:
    docker_pull: "{{ [ start ] }}"
  when: start is defined

- set_fact:
    docker_pull: "{{ pull | default([]) | union( docker_pull | default([])) | unique | sort }}"

- debug: msg="Docker images to pull - {{ docker_pull }}"
- debug: msg="Docker image to start as a service - {{ start }}"
  when:  start is defined

- name:    Adding Docker repository key
  apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=36A1D7869245C8950F966E92D8576A8BA88D21E9

- name:           Adding Docker repository
  apt_repository: repo='deb {{ common.urls.docker }}/ubuntu docker main' update_cache=yes

- name: Installing Docker
  apt:  name=lxc-docker state=latest force=yes

- service: name=docker state=started

- include: "{{ common.utils.run }}"
  vars:
    title: Docker status checks
    commands:
      - { run: docker --version, expect: 'Docker version'  }
      - { run: docker ps,        expect: [ CONTAINER ID, IMAGE, COMMAND, CREATED, STATUS, PORTS, NAMES ]}
      - { run: docker images,    expect: [ REPOSITORY, TAG, IMAGE ID, CREATED, VIRTUAL SIZE ]}

- command:    "docker pull '{{ item }}'"
  with_items: docker_pull

- include: "{{ common.utils.run }}"
  vars:
    title: Docker images check
    commands:
      - { run:    "docker images | grep -v 'IMAGE ID' | awk '{print $1\":\"$2}' | sort -u",
          expect: "{{ docker_pull }}" }

- include: start.yml
  when: start is defined
